Nonterminals useless in grammar

    DeclList
    Decl
    FuncID


Terminals unused in grammar

    READ
    MINUS
    DIV
    UNARY


Rules useless in grammar

   48 DeclList: Decl DeclList
   49         | Decl
   50         | ε

   51 Decl: VarDecl
   52     | StmtList
   53     | Decl VarDecl
   54     | Decl StmtList

   55 FuncID: ID LPAR


Rules useless in parser due to conflicts

   31 Expr: ID MULT ID
   36     | ID PLUS ID
   39     | ID EQ Expr

   41 Primary: ID


State 5 conflicts: 2 shift/reduce
State 24 conflicts: 2 shift/reduce, 5 reduce/reduce
State 26 conflicts: 2 shift/reduce
State 34 conflicts: 6 shift/reduce
State 52 conflicts: 5 reduce/reduce
State 56 conflicts: 2 shift/reduce, 10 reduce/reduce
State 57 conflicts: 2 shift/reduce, 5 reduce/reduce
State 59 conflicts: 2 shift/reduce, 10 reduce/reduce
State 60 conflicts: 2 shift/reduce, 5 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: FuncDeclList
    2        | Program FuncDeclList

    3 FuncDeclList: FuncDecl
    4             | FuncDecl FuncDeclList

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR Block

    6 ParamDeclList: ε
    7              | ParamDecl
    8              | ParamDecl COMMA ParamDeclList

    9 Block: LCBRA BlockList RCBRA

   10 BlockList: ε
   11          | BlockList StmtList
   12          | BlockList VarDecl

   13 ParamDecl: Type ID
   14          | Type ID LBRA RBRA

   15 VarDecl: Type ID SEMICOLON
   16        | Type ID LBRA NUMBER RBRA SEMICOLON

   17 Type: INT
   18     | CHAR

   19 StmtList: Stmt
   20         | Stmt StmtList

   21 Stmt: SEMICOLON
   22     | Expr SEMICOLON
   23     | WRITE Expr SEMICOLON
   24     | RETURN Expr SEMICOLON
   25     | WRITELN SEMICOLON

   26 Expr: Primary
   27     | ID
   28     | ID EQ Expr
   29     | Expr MULT Expr
   30     | ID MULT Expr
   31     | ID MULT ID
   32     | ID MULT NUMBER
   33     | NUMBER MULT NUMBER
   34     | Expr PLUS Expr
   35     | ID PLUS Expr
   36     | ID PLUS ID
   37     | ID PLUS NUMBER
   38     | NUMBER PLUS NUMBER
   39     | ID EQ Expr
   40     | ID LBRA NUMBER RBRA EQ Expr

   41 Primary: ID
   42        | NUMBER
   43        | ID LPAR ExprList RPAR
   44        | ID LBRA NUMBER RBRA

   45 ExprList: ε
   46         | Expr
   47         | Expr COMMA ExprList


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <string> (258) 18
    INT <string> (259) 17
    ID <string> (260) 5 13 14 15 16 27 28 30 31 32 35 36 37 39 40 41 43 44
    SEMICOLON <char> (261) 15 16 21 22 23 24 25
    EQ <char> (262) 28 39 40
    NUMBER <number> (263) 16 32 33 37 38 40 42 44
    WRITE (264) 23
    READ (265)
    WRITELN (266) 25
    RETURN (267) 24
    LPAR (268) 5 43
    LBRA (269) 14 16 40 44
    RCBRA (270) 9
    LCBRA (271) 9
    COMMA (272) 8 47
    PLUS (273) 34 35 36 37 38
    MINUS (274)
    MULT (275) 29 30 31 32 33
    DIV (276)
    RPAR (277) 5 43
    RBRA (278) 14 16 40 44
    UNARY (279)


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    Program <ast> (26)
        on left: 1 2
        on right: 0 2
    FuncDeclList <ast> (27)
        on left: 3 4
        on right: 1 2 4
    FuncDecl <ast> (28)
        on left: 5
        on right: 3 4
    ParamDeclList <ast> (29)
        on left: 6 7 8
        on right: 5 8
    Block <ast> (30)
        on left: 9
        on right: 5
    BlockList <ast> (31)
        on left: 10 11 12
        on right: 9 11 12
    ParamDecl <ast> (32)
        on left: 13 14
        on right: 7 8
    VarDecl <ast> (33)
        on left: 15 16
        on right: 12
    Type <string> (34)
        on left: 17 18
        on right: 5 13 14 15 16
    StmtList <ast> (35)
        on left: 19 20
        on right: 11 20
    Stmt <ast> (36)
        on left: 21 22 23 24 25
        on right: 19 20
    Expr <ast> (37)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 22 23 24 28 29 30 34 35 39 40 46 47
    Primary <ast> (38)
        on left: 41 42 43 44
        on right: 26
    ExprList <ast> (39)
        on left: 45 46 47
        on right: 43 47


State 0

    0 $accept: • Program $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    Program       go to state 3
    FuncDeclList  go to state 4
    FuncDecl      go to state 5
    Type          go to state 6


State 1

   18 Type: CHAR •

    $default  reduce using rule 18 (Type)


State 2

   17 Type: INT •

    $default  reduce using rule 17 (Type)


State 3

    0 $accept: Program • $end
    2 Program: Program • FuncDeclList

    $end  shift, and go to state 7
    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    FuncDeclList  go to state 8
    FuncDecl      go to state 5
    Type          go to state 6


State 4

    1 Program: FuncDeclList •

    $default  reduce using rule 1 (Program)


State 5

    3 FuncDeclList: FuncDecl •
    4             | FuncDecl • FuncDeclList

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    CHAR      [reduce using rule 3 (FuncDeclList)]
    INT       [reduce using rule 3 (FuncDeclList)]
    $default  reduce using rule 3 (FuncDeclList)

    FuncDeclList  go to state 9
    FuncDecl      go to state 5
    Type          go to state 6


State 6

    5 FuncDecl: Type • ID LPAR ParamDeclList RPAR Block

    ID  shift, and go to state 10


State 7

    0 $accept: Program $end •

    $default  accept


State 8

    2 Program: Program FuncDeclList •

    $default  reduce using rule 2 (Program)


State 9

    4 FuncDeclList: FuncDecl FuncDeclList •

    $default  reduce using rule 4 (FuncDeclList)


State 10

    5 FuncDecl: Type ID • LPAR ParamDeclList RPAR Block

    LPAR  shift, and go to state 11


State 11

    5 FuncDecl: Type ID LPAR • ParamDeclList RPAR Block

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 6 (ParamDeclList)

    ParamDeclList  go to state 12
    ParamDecl      go to state 13
    Type           go to state 14


State 12

    5 FuncDecl: Type ID LPAR ParamDeclList • RPAR Block

    RPAR  shift, and go to state 15


State 13

    7 ParamDeclList: ParamDecl •
    8              | ParamDecl • COMMA ParamDeclList

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamDeclList)


State 14

   13 ParamDecl: Type • ID
   14          | Type • ID LBRA RBRA

    ID  shift, and go to state 17


State 15

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR • Block

    LCBRA  shift, and go to state 18

    Block  go to state 19


State 16

    8 ParamDeclList: ParamDecl COMMA • ParamDeclList

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 6 (ParamDeclList)

    ParamDeclList  go to state 20
    ParamDecl      go to state 13
    Type           go to state 14


State 17

   13 ParamDecl: Type ID •
   14          | Type ID • LBRA RBRA

    LBRA  shift, and go to state 21

    $default  reduce using rule 13 (ParamDecl)


State 18

    9 Block: LCBRA • BlockList RCBRA

    $default  reduce using rule 10 (BlockList)

    BlockList  go to state 22


State 19

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR Block •

    $default  reduce using rule 5 (FuncDecl)


State 20

    8 ParamDeclList: ParamDecl COMMA ParamDeclList •

    $default  reduce using rule 8 (ParamDeclList)


State 21

   14 ParamDecl: Type ID LBRA • RBRA

    RBRA  shift, and go to state 23


State 22

    9 Block: LCBRA BlockList • RCBRA
   11 BlockList: BlockList • StmtList
   12          | BlockList • VarDecl

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    ID         shift, and go to state 24
    SEMICOLON  shift, and go to state 25
    NUMBER     shift, and go to state 26
    WRITE      shift, and go to state 27
    WRITELN    shift, and go to state 28
    RETURN     shift, and go to state 29
    RCBRA      shift, and go to state 30

    VarDecl   go to state 31
    Type      go to state 32
    StmtList  go to state 33
    Stmt      go to state 34
    Expr      go to state 35
    Primary   go to state 36


State 23

   14 ParamDecl: Type ID LBRA RBRA •

    $default  reduce using rule 14 (ParamDecl)


State 24

   27 Expr: ID •
   28     | ID • EQ Expr
   30     | ID • MULT Expr
   31     | ID • MULT ID
   32     | ID • MULT NUMBER
   35     | ID • PLUS Expr
   36     | ID • PLUS ID
   37     | ID • PLUS NUMBER
   39     | ID • EQ Expr
   40     | ID • LBRA NUMBER RBRA EQ Expr
   41 Primary: ID •
   43        | ID • LPAR ExprList RPAR
   44        | ID • LBRA NUMBER RBRA

    EQ    shift, and go to state 37
    LPAR  shift, and go to state 38
    LBRA  shift, and go to state 39
    PLUS  shift, and go to state 40
    MULT  shift, and go to state 41

    SEMICOLON  reduce using rule 27 (Expr)
    SEMICOLON  [reduce using rule 41 (Primary)]
    COMMA      reduce using rule 27 (Expr)
    COMMA      [reduce using rule 41 (Primary)]
    PLUS       [reduce using rule 27 (Expr)]
    PLUS       [reduce using rule 41 (Primary)]
    MULT       [reduce using rule 27 (Expr)]
    MULT       [reduce using rule 41 (Primary)]
    RPAR       reduce using rule 27 (Expr)
    RPAR       [reduce using rule 41 (Primary)]
    $default   reduce using rule 27 (Expr)


State 25

   21 Stmt: SEMICOLON •

    $default  reduce using rule 21 (Stmt)


State 26

   33 Expr: NUMBER • MULT NUMBER
   38     | NUMBER • PLUS NUMBER
   42 Primary: NUMBER •

    PLUS  shift, and go to state 42
    MULT  shift, and go to state 43

    PLUS      [reduce using rule 42 (Primary)]
    MULT      [reduce using rule 42 (Primary)]
    $default  reduce using rule 42 (Primary)


State 27

   23 Stmt: WRITE • Expr SEMICOLON

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 44
    Primary  go to state 36


State 28

   25 Stmt: WRITELN • SEMICOLON

    SEMICOLON  shift, and go to state 45


State 29

   24 Stmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 46
    Primary  go to state 36


State 30

    9 Block: LCBRA BlockList RCBRA •

    $default  reduce using rule 9 (Block)


State 31

   12 BlockList: BlockList VarDecl •

    $default  reduce using rule 12 (BlockList)


State 32

   15 VarDecl: Type • ID SEMICOLON
   16        | Type • ID LBRA NUMBER RBRA SEMICOLON

    ID  shift, and go to state 47


State 33

   11 BlockList: BlockList StmtList •

    $default  reduce using rule 11 (BlockList)


State 34

   19 StmtList: Stmt •
   20         | Stmt • StmtList

    ID         shift, and go to state 24
    SEMICOLON  shift, and go to state 25
    NUMBER     shift, and go to state 26
    WRITE      shift, and go to state 27
    WRITELN    shift, and go to state 28
    RETURN     shift, and go to state 29

    ID         [reduce using rule 19 (StmtList)]
    SEMICOLON  [reduce using rule 19 (StmtList)]
    NUMBER     [reduce using rule 19 (StmtList)]
    WRITE      [reduce using rule 19 (StmtList)]
    WRITELN    [reduce using rule 19 (StmtList)]
    RETURN     [reduce using rule 19 (StmtList)]
    $default   reduce using rule 19 (StmtList)

    StmtList  go to state 48
    Stmt      go to state 34
    Expr      go to state 35
    Primary   go to state 36


State 35

   22 Stmt: Expr • SEMICOLON
   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 49
    PLUS       shift, and go to state 50
    MULT       shift, and go to state 51


State 36

   26 Expr: Primary •

    $default  reduce using rule 26 (Expr)


State 37

   28 Expr: ID EQ • Expr
   39     | ID EQ • Expr

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 52
    Primary  go to state 36


State 38

   43 Primary: ID LPAR • ExprList RPAR

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    $default  reduce using rule 45 (ExprList)

    Expr      go to state 53
    Primary   go to state 36
    ExprList  go to state 54


State 39

   40 Expr: ID LBRA • NUMBER RBRA EQ Expr
   44 Primary: ID LBRA • NUMBER RBRA

    NUMBER  shift, and go to state 55


State 40

   35 Expr: ID PLUS • Expr
   36     | ID PLUS • ID
   37     | ID PLUS • NUMBER

    ID      shift, and go to state 56
    NUMBER  shift, and go to state 57

    Expr     go to state 58
    Primary  go to state 36


State 41

   30 Expr: ID MULT • Expr
   31     | ID MULT • ID
   32     | ID MULT • NUMBER

    ID      shift, and go to state 59
    NUMBER  shift, and go to state 60

    Expr     go to state 61
    Primary  go to state 36


State 42

   38 Expr: NUMBER PLUS • NUMBER

    NUMBER  shift, and go to state 62


State 43

   33 Expr: NUMBER MULT • NUMBER

    NUMBER  shift, and go to state 63


State 44

   23 Stmt: WRITE Expr • SEMICOLON
   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 64
    PLUS       shift, and go to state 50
    MULT       shift, and go to state 51


State 45

   25 Stmt: WRITELN SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 46

   24 Stmt: RETURN Expr • SEMICOLON
   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 50
    MULT       shift, and go to state 51


State 47

   15 VarDecl: Type ID • SEMICOLON
   16        | Type ID • LBRA NUMBER RBRA SEMICOLON

    SEMICOLON  shift, and go to state 66
    LBRA       shift, and go to state 67


State 48

   20 StmtList: Stmt StmtList •

    $default  reduce using rule 20 (StmtList)


State 49

   22 Stmt: Expr SEMICOLON •

    $default  reduce using rule 22 (Stmt)


State 50

   34 Expr: Expr PLUS • Expr

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 68
    Primary  go to state 36


State 51

   29 Expr: Expr MULT • Expr

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 69
    Primary  go to state 36


State 52

   28 Expr: ID EQ Expr •
   29     | Expr • MULT Expr
   34     | Expr • PLUS Expr
   39     | ID EQ Expr •

    SEMICOLON  reduce using rule 28 (Expr)
    SEMICOLON  [reduce using rule 39 (Expr)]
    COMMA      reduce using rule 28 (Expr)
    COMMA      [reduce using rule 39 (Expr)]
    PLUS       reduce using rule 28 (Expr)
    PLUS       [reduce using rule 39 (Expr)]
    MULT       reduce using rule 28 (Expr)
    MULT       [reduce using rule 39 (Expr)]
    RPAR       reduce using rule 28 (Expr)
    RPAR       [reduce using rule 39 (Expr)]
    $default   reduce using rule 28 (Expr)


State 53

   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr
   46 ExprList: Expr •
   47         | Expr • COMMA ExprList

    COMMA  shift, and go to state 70
    PLUS   shift, and go to state 50
    MULT   shift, and go to state 51

    $default  reduce using rule 46 (ExprList)


State 54

   43 Primary: ID LPAR ExprList • RPAR

    RPAR  shift, and go to state 71


State 55

   40 Expr: ID LBRA NUMBER • RBRA EQ Expr
   44 Primary: ID LBRA NUMBER • RBRA

    RBRA  shift, and go to state 72


State 56

   27 Expr: ID •
   28     | ID • EQ Expr
   30     | ID • MULT Expr
   31     | ID • MULT ID
   32     | ID • MULT NUMBER
   35     | ID • PLUS Expr
   36     | ID • PLUS ID
   36     | ID PLUS ID •
   37     | ID • PLUS NUMBER
   39     | ID • EQ Expr
   40     | ID • LBRA NUMBER RBRA EQ Expr
   41 Primary: ID •
   43        | ID • LPAR ExprList RPAR
   44        | ID • LBRA NUMBER RBRA

    EQ    shift, and go to state 37
    LPAR  shift, and go to state 38
    LBRA  shift, and go to state 39
    PLUS  shift, and go to state 40
    MULT  shift, and go to state 41

    SEMICOLON  reduce using rule 27 (Expr)
    SEMICOLON  [reduce using rule 36 (Expr)]
    SEMICOLON  [reduce using rule 41 (Primary)]
    COMMA      reduce using rule 27 (Expr)
    COMMA      [reduce using rule 36 (Expr)]
    COMMA      [reduce using rule 41 (Primary)]
    PLUS       [reduce using rule 27 (Expr)]
    PLUS       [reduce using rule 36 (Expr)]
    PLUS       [reduce using rule 41 (Primary)]
    MULT       [reduce using rule 27 (Expr)]
    MULT       [reduce using rule 36 (Expr)]
    MULT       [reduce using rule 41 (Primary)]
    RPAR       reduce using rule 27 (Expr)
    RPAR       [reduce using rule 36 (Expr)]
    RPAR       [reduce using rule 41 (Primary)]
    $default   reduce using rule 27 (Expr)


State 57

   33 Expr: NUMBER • MULT NUMBER
   37     | ID PLUS NUMBER •
   38     | NUMBER • PLUS NUMBER
   42 Primary: NUMBER •

    PLUS  shift, and go to state 42
    MULT  shift, and go to state 43

    SEMICOLON  reduce using rule 37 (Expr)
    SEMICOLON  [reduce using rule 42 (Primary)]
    COMMA      reduce using rule 37 (Expr)
    COMMA      [reduce using rule 42 (Primary)]
    PLUS       [reduce using rule 37 (Expr)]
    PLUS       [reduce using rule 42 (Primary)]
    MULT       [reduce using rule 37 (Expr)]
    MULT       [reduce using rule 42 (Primary)]
    RPAR       reduce using rule 37 (Expr)
    RPAR       [reduce using rule 42 (Primary)]
    $default   reduce using rule 37 (Expr)


State 58

   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr
   35     | ID PLUS Expr •

    MULT  shift, and go to state 51

    $default  reduce using rule 35 (Expr)


State 59

   27 Expr: ID •
   28     | ID • EQ Expr
   30     | ID • MULT Expr
   31     | ID • MULT ID
   31     | ID MULT ID •
   32     | ID • MULT NUMBER
   35     | ID • PLUS Expr
   36     | ID • PLUS ID
   37     | ID • PLUS NUMBER
   39     | ID • EQ Expr
   40     | ID • LBRA NUMBER RBRA EQ Expr
   41 Primary: ID •
   43        | ID • LPAR ExprList RPAR
   44        | ID • LBRA NUMBER RBRA

    EQ    shift, and go to state 37
    LPAR  shift, and go to state 38
    LBRA  shift, and go to state 39
    PLUS  shift, and go to state 40
    MULT  shift, and go to state 41

    SEMICOLON  reduce using rule 27 (Expr)
    SEMICOLON  [reduce using rule 31 (Expr)]
    SEMICOLON  [reduce using rule 41 (Primary)]
    COMMA      reduce using rule 27 (Expr)
    COMMA      [reduce using rule 31 (Expr)]
    COMMA      [reduce using rule 41 (Primary)]
    PLUS       [reduce using rule 27 (Expr)]
    PLUS       [reduce using rule 31 (Expr)]
    PLUS       [reduce using rule 41 (Primary)]
    MULT       [reduce using rule 27 (Expr)]
    MULT       [reduce using rule 31 (Expr)]
    MULT       [reduce using rule 41 (Primary)]
    RPAR       reduce using rule 27 (Expr)
    RPAR       [reduce using rule 31 (Expr)]
    RPAR       [reduce using rule 41 (Primary)]
    $default   reduce using rule 27 (Expr)


State 60

   32 Expr: ID MULT NUMBER •
   33     | NUMBER • MULT NUMBER
   38     | NUMBER • PLUS NUMBER
   42 Primary: NUMBER •

    PLUS  shift, and go to state 42
    MULT  shift, and go to state 43

    SEMICOLON  reduce using rule 32 (Expr)
    SEMICOLON  [reduce using rule 42 (Primary)]
    COMMA      reduce using rule 32 (Expr)
    COMMA      [reduce using rule 42 (Primary)]
    PLUS       [reduce using rule 32 (Expr)]
    PLUS       [reduce using rule 42 (Primary)]
    MULT       [reduce using rule 32 (Expr)]
    MULT       [reduce using rule 42 (Primary)]
    RPAR       reduce using rule 32 (Expr)
    RPAR       [reduce using rule 42 (Primary)]
    $default   reduce using rule 32 (Expr)


State 61

   29 Expr: Expr • MULT Expr
   30     | ID MULT Expr •
   34     | Expr • PLUS Expr

    $default  reduce using rule 30 (Expr)


State 62

   38 Expr: NUMBER PLUS NUMBER •

    $default  reduce using rule 38 (Expr)


State 63

   33 Expr: NUMBER MULT NUMBER •

    $default  reduce using rule 33 (Expr)


State 64

   23 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 23 (Stmt)


State 65

   24 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 24 (Stmt)


State 66

   15 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 15 (VarDecl)


State 67

   16 VarDecl: Type ID LBRA • NUMBER RBRA SEMICOLON

    NUMBER  shift, and go to state 73


State 68

   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr
   34     | Expr PLUS Expr •

    MULT  shift, and go to state 51

    $default  reduce using rule 34 (Expr)


State 69

   29 Expr: Expr • MULT Expr
   29     | Expr MULT Expr •
   34     | Expr • PLUS Expr

    $default  reduce using rule 29 (Expr)


State 70

   47 ExprList: Expr COMMA • ExprList

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    $default  reduce using rule 45 (ExprList)

    Expr      go to state 53
    Primary   go to state 36
    ExprList  go to state 74


State 71

   43 Primary: ID LPAR ExprList RPAR •

    $default  reduce using rule 43 (Primary)


State 72

   40 Expr: ID LBRA NUMBER RBRA • EQ Expr
   44 Primary: ID LBRA NUMBER RBRA •

    EQ  shift, and go to state 75

    $default  reduce using rule 44 (Primary)


State 73

   16 VarDecl: Type ID LBRA NUMBER • RBRA SEMICOLON

    RBRA  shift, and go to state 76


State 74

   47 ExprList: Expr COMMA ExprList •

    $default  reduce using rule 47 (ExprList)


State 75

   40 Expr: ID LBRA NUMBER RBRA EQ • Expr

    ID      shift, and go to state 24
    NUMBER  shift, and go to state 26

    Expr     go to state 77
    Primary  go to state 36


State 76

   16 VarDecl: Type ID LBRA NUMBER RBRA • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 77

   29 Expr: Expr • MULT Expr
   34     | Expr • PLUS Expr
   40     | ID LBRA NUMBER RBRA EQ Expr •

    $default  reduce using rule 40 (Expr)


State 78

   16 VarDecl: Type ID LBRA NUMBER RBRA SEMICOLON •

    $default  reduce using rule 16 (VarDecl)
