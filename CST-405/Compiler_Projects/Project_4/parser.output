Nonterminals useless in grammar

    LogicOp
    DeclList
    Decl
    FuncID


Terminals unused in grammar

    READ
    UNARY


Rules useless in grammar

   53 LogicOp: LESSTHN
   54        | GRTRTHN
   55        | LESSTHNEQ
   56        | GRTRTHNEQ
   57        | EQEQ
   58        | NOTEQ

   59 DeclList: Decl DeclList
   60         | Decl
   61         | ε

   62 Decl: VarDecl
   63     | StmtList
   64     | Decl VarDecl
   65     | Decl StmtList

   66 FuncID: ID LPAR


Rules useless in parser due to conflicts

   36 Expr: Expr MULT Primary
   39     | Primary PLUS Primary
   41     | Primary DIV Primary
   43     | Primary MINUS Primary


State 5 conflicts: 2 shift/reduce
State 35 conflicts: 7 shift/reduce
State 40 conflicts: 11 reduce/reduce
State 42 conflicts: 1 shift/reduce
State 69 conflicts: 11 reduce/reduce
State 71 conflicts: 11 reduce/reduce
State 73 conflicts: 11 reduce/reduce
State 75 conflicts: 11 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: FuncDeclList
    2        | Program FuncDeclList

    3 FuncDeclList: FuncDecl
    4             | FuncDecl FuncDeclList

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR Block

    6 ParamDeclList: ε
    7              | ParamDecl
    8              | ParamDecl COMMA ParamDeclList

    9 Block: LCBRA BlockList RCBRA

   10 Condition: Expr LESSTHN Expr
   11          | Expr GRTRTHN Expr
   12          | Expr LESSTHNEQ Expr
   13          | Expr GRTRTHNEQ Expr
   14          | Expr EQEQ Expr
   15          | Expr NOTEQ Expr

   16 BlockList: ε
   17          | BlockList StmtList
   18          | BlockList VarDecl

   19 ParamDecl: Type ID
   20          | Type ID LBRA NUMBER RBRA

   21 VarDecl: Type ID SEMICOLON
   22        | Type ID LBRA NUMBER RBRA SEMICOLON

   23 Type: INT
   24     | CHAR

   25 StmtList: Stmt
   26         | Stmt StmtList

   27 Stmt: SEMICOLON
   28     | Primary EQ Expr SEMICOLON
   29     | WRITE Expr SEMICOLON
   30     | RETURN Expr SEMICOLON
   31     | WRITELN SEMICOLON
   32     | IF LPAR Condition RPAR IfBlock

   33 Expr: Primary
   34     | ID
   35     | Expr MULT Expr
   36     | Expr MULT Primary
   37     | Expr PLUS Expr
   38     | Primary PLUS Expr
   39     | Primary PLUS Primary
   40     | Primary DIV Expr
   41     | Primary DIV Primary
   42     | Primary MINUS Expr
   43     | Primary MINUS Primary

   44 IfBlock: Block
   45        | Block ELSE Block

   46 Primary: ID
   47        | NUMBER
   48        | ID LPAR ExprList RPAR
   49        | ID LBRA NUMBER RBRA

   50 ExprList: ε
   51         | Expr
   52         | Expr COMMA ExprList


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <string> (258) 24
    INT <string> (259) 23
    ID <string> (260) 5 19 20 21 22 34 46 48 49
    SEMICOLON <char> (261) 21 22 27 28 29 30 31
    EQ <char> (262) 28
    NUMBER <number> (263) 20 22 47 49
    WRITE (264) 29
    READ (265)
    WRITELN (266) 31
    RETURN (267) 30
    IF (268) 32
    ELSE (269) 45
    LPAR (270) 5 32 48
    LBRA (271) 20 22 49
    RCBRA (272) 9
    LCBRA (273) 9
    COMMA (274) 8 52
    PLUS (275) 37 38 39
    MINUS (276) 42 43
    MULT (277) 35 36
    DIV (278) 40 41
    RPAR (279) 5 32 48
    RBRA (280) 20 22 49
    UNARY (281)
    LESSTHN (282) 10
    GRTRTHN (283) 11
    LESSTHNEQ (284) 12
    GRTRTHNEQ (285) 13
    EQEQ (286) 14
    NOTEQ (287) 15


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Program <ast> (34)
        on left: 1 2
        on right: 0 2
    FuncDeclList <ast> (35)
        on left: 3 4
        on right: 1 2 4
    FuncDecl <ast> (36)
        on left: 5
        on right: 3 4
    ParamDeclList <ast> (37)
        on left: 6 7 8
        on right: 5 8
    Block <ast> (38)
        on left: 9
        on right: 5 44 45
    Condition <ast> (39)
        on left: 10 11 12 13 14 15
        on right: 32
    BlockList <ast> (40)
        on left: 16 17 18
        on right: 9 17 18
    ParamDecl <ast> (41)
        on left: 19 20
        on right: 7 8
    VarDecl <ast> (42)
        on left: 21 22
        on right: 18
    Type <string> (43)
        on left: 23 24
        on right: 5 19 20 21 22
    StmtList <ast> (44)
        on left: 25 26
        on right: 17 26
    Stmt <ast> (45)
        on left: 27 28 29 30 31 32
        on right: 25 26
    Expr <ast> (46)
        on left: 33 34 35 36 37 38 39 40 41 42 43
        on right: 10 11 12 13 14 15 28 29 30 35 36 37 38 40 42 51 52
    IfBlock <ast> (47)
        on left: 44 45
        on right: 32
    Primary <ast> (48)
        on left: 46 47 48 49
        on right: 28 33 36 38 39 40 41 42 43
    ExprList <ast> (49)
        on left: 50 51 52
        on right: 48 52


State 0

    0 $accept: • Program $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    Program       go to state 3
    FuncDeclList  go to state 4
    FuncDecl      go to state 5
    Type          go to state 6


State 1

   24 Type: CHAR •

    $default  reduce using rule 24 (Type)


State 2

   23 Type: INT •

    $default  reduce using rule 23 (Type)


State 3

    0 $accept: Program • $end
    2 Program: Program • FuncDeclList

    $end  shift, and go to state 7
    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    FuncDeclList  go to state 8
    FuncDecl      go to state 5
    Type          go to state 6


State 4

    1 Program: FuncDeclList •

    $default  reduce using rule 1 (Program)


State 5

    3 FuncDeclList: FuncDecl •
    4             | FuncDecl • FuncDeclList

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    CHAR      [reduce using rule 3 (FuncDeclList)]
    INT       [reduce using rule 3 (FuncDeclList)]
    $default  reduce using rule 3 (FuncDeclList)

    FuncDeclList  go to state 9
    FuncDecl      go to state 5
    Type          go to state 6


State 6

    5 FuncDecl: Type • ID LPAR ParamDeclList RPAR Block

    ID  shift, and go to state 10


State 7

    0 $accept: Program $end •

    $default  accept


State 8

    2 Program: Program FuncDeclList •

    $default  reduce using rule 2 (Program)


State 9

    4 FuncDeclList: FuncDecl FuncDeclList •

    $default  reduce using rule 4 (FuncDeclList)


State 10

    5 FuncDecl: Type ID • LPAR ParamDeclList RPAR Block

    LPAR  shift, and go to state 11


State 11

    5 FuncDecl: Type ID LPAR • ParamDeclList RPAR Block

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 6 (ParamDeclList)

    ParamDeclList  go to state 12
    ParamDecl      go to state 13
    Type           go to state 14


State 12

    5 FuncDecl: Type ID LPAR ParamDeclList • RPAR Block

    RPAR  shift, and go to state 15


State 13

    7 ParamDeclList: ParamDecl •
    8              | ParamDecl • COMMA ParamDeclList

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamDeclList)


State 14

   19 ParamDecl: Type • ID
   20          | Type • ID LBRA NUMBER RBRA

    ID  shift, and go to state 17


State 15

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR • Block

    LCBRA  shift, and go to state 18

    Block  go to state 19


State 16

    8 ParamDeclList: ParamDecl COMMA • ParamDeclList

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2

    $default  reduce using rule 6 (ParamDeclList)

    ParamDeclList  go to state 20
    ParamDecl      go to state 13
    Type           go to state 14


State 17

   19 ParamDecl: Type ID •
   20          | Type ID • LBRA NUMBER RBRA

    LBRA  shift, and go to state 21

    $default  reduce using rule 19 (ParamDecl)


State 18

    9 Block: LCBRA • BlockList RCBRA

    $default  reduce using rule 16 (BlockList)

    BlockList  go to state 22


State 19

    5 FuncDecl: Type ID LPAR ParamDeclList RPAR Block •

    $default  reduce using rule 5 (FuncDecl)


State 20

    8 ParamDeclList: ParamDecl COMMA ParamDeclList •

    $default  reduce using rule 8 (ParamDeclList)


State 21

   20 ParamDecl: Type ID LBRA • NUMBER RBRA

    NUMBER  shift, and go to state 23


State 22

    9 Block: LCBRA BlockList • RCBRA
   17 BlockList: BlockList • StmtList
   18          | BlockList • VarDecl

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    ID         shift, and go to state 24
    SEMICOLON  shift, and go to state 25
    NUMBER     shift, and go to state 26
    WRITE      shift, and go to state 27
    WRITELN    shift, and go to state 28
    RETURN     shift, and go to state 29
    IF         shift, and go to state 30
    RCBRA      shift, and go to state 31

    VarDecl   go to state 32
    Type      go to state 33
    StmtList  go to state 34
    Stmt      go to state 35
    Primary   go to state 36


State 23

   20 ParamDecl: Type ID LBRA NUMBER • RBRA

    RBRA  shift, and go to state 37


State 24

   46 Primary: ID •
   48        | ID • LPAR ExprList RPAR
   49        | ID • LBRA NUMBER RBRA

    LPAR  shift, and go to state 38
    LBRA  shift, and go to state 39

    $default  reduce using rule 46 (Primary)


State 25

   27 Stmt: SEMICOLON •

    $default  reduce using rule 27 (Stmt)


State 26

   47 Primary: NUMBER •

    $default  reduce using rule 47 (Primary)


State 27

   29 Stmt: WRITE • Expr SEMICOLON

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 41
    Primary  go to state 42


State 28

   31 Stmt: WRITELN • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 29

   30 Stmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 44
    Primary  go to state 42


State 30

   32 Stmt: IF • LPAR Condition RPAR IfBlock

    LPAR  shift, and go to state 45


State 31

    9 Block: LCBRA BlockList RCBRA •

    $default  reduce using rule 9 (Block)


State 32

   18 BlockList: BlockList VarDecl •

    $default  reduce using rule 18 (BlockList)


State 33

   21 VarDecl: Type • ID SEMICOLON
   22        | Type • ID LBRA NUMBER RBRA SEMICOLON

    ID  shift, and go to state 46


State 34

   17 BlockList: BlockList StmtList •

    $default  reduce using rule 17 (BlockList)


State 35

   25 StmtList: Stmt •
   26         | Stmt • StmtList

    ID         shift, and go to state 24
    SEMICOLON  shift, and go to state 25
    NUMBER     shift, and go to state 26
    WRITE      shift, and go to state 27
    WRITELN    shift, and go to state 28
    RETURN     shift, and go to state 29
    IF         shift, and go to state 30

    ID         [reduce using rule 25 (StmtList)]
    SEMICOLON  [reduce using rule 25 (StmtList)]
    NUMBER     [reduce using rule 25 (StmtList)]
    WRITE      [reduce using rule 25 (StmtList)]
    WRITELN    [reduce using rule 25 (StmtList)]
    RETURN     [reduce using rule 25 (StmtList)]
    IF         [reduce using rule 25 (StmtList)]
    $default   reduce using rule 25 (StmtList)

    StmtList  go to state 47
    Stmt      go to state 35
    Primary   go to state 36


State 36

   28 Stmt: Primary • EQ Expr SEMICOLON

    EQ  shift, and go to state 48


State 37

   20 ParamDecl: Type ID LBRA NUMBER RBRA •

    $default  reduce using rule 20 (ParamDecl)


State 38

   48 Primary: ID LPAR • ExprList RPAR

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    $default  reduce using rule 50 (ExprList)

    Expr      go to state 49
    Primary   go to state 42
    ExprList  go to state 50


State 39

   49 Primary: ID LBRA • NUMBER RBRA

    NUMBER  shift, and go to state 51


State 40

   34 Expr: ID •
   46 Primary: ID •
   48        | ID • LPAR ExprList RPAR
   49        | ID • LBRA NUMBER RBRA

    LPAR  shift, and go to state 38
    LBRA  shift, and go to state 39

    SEMICOLON  reduce using rule 34 (Expr)
    SEMICOLON  [reduce using rule 46 (Primary)]
    COMMA      reduce using rule 34 (Expr)
    COMMA      [reduce using rule 46 (Primary)]
    PLUS       reduce using rule 34 (Expr)
    PLUS       [reduce using rule 46 (Primary)]
    MINUS      reduce using rule 46 (Primary)
    MULT       reduce using rule 34 (Expr)
    MULT       [reduce using rule 46 (Primary)]
    DIV        reduce using rule 46 (Primary)
    RPAR       reduce using rule 34 (Expr)
    RPAR       [reduce using rule 46 (Primary)]
    LESSTHN    reduce using rule 34 (Expr)
    LESSTHN    [reduce using rule 46 (Primary)]
    GRTRTHN    reduce using rule 34 (Expr)
    GRTRTHN    [reduce using rule 46 (Primary)]
    LESSTHNEQ  reduce using rule 34 (Expr)
    LESSTHNEQ  [reduce using rule 46 (Primary)]
    GRTRTHNEQ  reduce using rule 34 (Expr)
    GRTRTHNEQ  [reduce using rule 46 (Primary)]
    EQEQ       reduce using rule 34 (Expr)
    EQEQ       [reduce using rule 46 (Primary)]
    NOTEQ      reduce using rule 34 (Expr)
    NOTEQ      [reduce using rule 46 (Primary)]
    $default   reduce using rule 34 (Expr)


State 41

   29 Stmt: WRITE Expr • SEMICOLON
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 52
    PLUS       shift, and go to state 53
    MULT       shift, and go to state 54


State 42

   33 Expr: Primary •
   38     | Primary • PLUS Expr
   39     | Primary • PLUS Primary
   40     | Primary • DIV Expr
   41     | Primary • DIV Primary
   42     | Primary • MINUS Expr
   43     | Primary • MINUS Primary

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    DIV    shift, and go to state 57

    PLUS      [reduce using rule 33 (Expr)]
    $default  reduce using rule 33 (Expr)


State 43

   31 Stmt: WRITELN SEMICOLON •

    $default  reduce using rule 31 (Stmt)


State 44

   30 Stmt: RETURN Expr • SEMICOLON
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 58
    PLUS       shift, and go to state 53
    MULT       shift, and go to state 54


State 45

   32 Stmt: IF LPAR • Condition RPAR IfBlock

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Condition  go to state 59
    Expr       go to state 60
    Primary    go to state 42


State 46

   21 VarDecl: Type ID • SEMICOLON
   22        | Type ID • LBRA NUMBER RBRA SEMICOLON

    SEMICOLON  shift, and go to state 61
    LBRA       shift, and go to state 62


State 47

   26 StmtList: Stmt StmtList •

    $default  reduce using rule 26 (StmtList)


State 48

   28 Stmt: Primary EQ • Expr SEMICOLON

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 63
    Primary  go to state 42


State 49

   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr
   51 ExprList: Expr •
   52         | Expr • COMMA ExprList

    COMMA  shift, and go to state 64
    PLUS   shift, and go to state 53
    MULT   shift, and go to state 54

    $default  reduce using rule 51 (ExprList)


State 50

   48 Primary: ID LPAR ExprList • RPAR

    RPAR  shift, and go to state 65


State 51

   49 Primary: ID LBRA NUMBER • RBRA

    RBRA  shift, and go to state 66


State 52

   29 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 29 (Stmt)


State 53

   37 Expr: Expr PLUS • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 67
    Primary  go to state 42


State 54

   35 Expr: Expr MULT • Expr
   36     | Expr MULT • Primary

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 68
    Primary  go to state 69


State 55

   38 Expr: Primary PLUS • Expr
   39     | Primary PLUS • Primary

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 70
    Primary  go to state 71


State 56

   42 Expr: Primary MINUS • Expr
   43     | Primary MINUS • Primary

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 72
    Primary  go to state 73


State 57

   40 Expr: Primary DIV • Expr
   41     | Primary DIV • Primary

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 74
    Primary  go to state 75


State 58

   30 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 30 (Stmt)


State 59

   32 Stmt: IF LPAR Condition • RPAR IfBlock

    RPAR  shift, and go to state 76


State 60

   10 Condition: Expr • LESSTHN Expr
   11          | Expr • GRTRTHN Expr
   12          | Expr • LESSTHNEQ Expr
   13          | Expr • GRTRTHNEQ Expr
   14          | Expr • EQEQ Expr
   15          | Expr • NOTEQ Expr
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS       shift, and go to state 53
    MULT       shift, and go to state 54
    LESSTHN    shift, and go to state 77
    GRTRTHN    shift, and go to state 78
    LESSTHNEQ  shift, and go to state 79
    GRTRTHNEQ  shift, and go to state 80
    EQEQ       shift, and go to state 81
    NOTEQ      shift, and go to state 82


State 61

   21 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 21 (VarDecl)


State 62

   22 VarDecl: Type ID LBRA • NUMBER RBRA SEMICOLON

    NUMBER  shift, and go to state 83


State 63

   28 Stmt: Primary EQ Expr • SEMICOLON
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    SEMICOLON  shift, and go to state 84
    PLUS       shift, and go to state 53
    MULT       shift, and go to state 54


State 64

   52 ExprList: Expr COMMA • ExprList

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    $default  reduce using rule 50 (ExprList)

    Expr      go to state 49
    Primary   go to state 42
    ExprList  go to state 85


State 65

   48 Primary: ID LPAR ExprList RPAR •

    $default  reduce using rule 48 (Primary)


State 66

   49 Primary: ID LBRA NUMBER RBRA •

    $default  reduce using rule 49 (Primary)


State 67

   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr
   37     | Expr PLUS Expr •

    MULT  shift, and go to state 54

    $default  reduce using rule 37 (Expr)


State 68

   35 Expr: Expr • MULT Expr
   35     | Expr MULT Expr •
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    $default  reduce using rule 35 (Expr)


State 69

   33 Expr: Primary •
   36     | Expr MULT Primary •
   38     | Primary • PLUS Expr
   39     | Primary • PLUS Primary
   40     | Primary • DIV Expr
   41     | Primary • DIV Primary
   42     | Primary • MINUS Expr
   43     | Primary • MINUS Primary

    MINUS  shift, and go to state 56
    DIV    shift, and go to state 57

    SEMICOLON  reduce using rule 33 (Expr)
    SEMICOLON  [reduce using rule 36 (Expr)]
    COMMA      reduce using rule 33 (Expr)
    COMMA      [reduce using rule 36 (Expr)]
    PLUS       reduce using rule 33 (Expr)
    PLUS       [reduce using rule 36 (Expr)]
    MULT       reduce using rule 33 (Expr)
    MULT       [reduce using rule 36 (Expr)]
    RPAR       reduce using rule 33 (Expr)
    RPAR       [reduce using rule 36 (Expr)]
    LESSTHN    reduce using rule 33 (Expr)
    LESSTHN    [reduce using rule 36 (Expr)]
    GRTRTHN    reduce using rule 33 (Expr)
    GRTRTHN    [reduce using rule 36 (Expr)]
    LESSTHNEQ  reduce using rule 33 (Expr)
    LESSTHNEQ  [reduce using rule 36 (Expr)]
    GRTRTHNEQ  reduce using rule 33 (Expr)
    GRTRTHNEQ  [reduce using rule 36 (Expr)]
    EQEQ       reduce using rule 33 (Expr)
    EQEQ       [reduce using rule 36 (Expr)]
    NOTEQ      reduce using rule 33 (Expr)
    NOTEQ      [reduce using rule 36 (Expr)]
    $default   reduce using rule 33 (Expr)


State 70

   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr
   38     | Primary PLUS Expr •

    MULT  shift, and go to state 54

    $default  reduce using rule 38 (Expr)


State 71

   33 Expr: Primary •
   38     | Primary • PLUS Expr
   39     | Primary • PLUS Primary
   39     | Primary PLUS Primary •
   40     | Primary • DIV Expr
   41     | Primary • DIV Primary
   42     | Primary • MINUS Expr
   43     | Primary • MINUS Primary

    MINUS  shift, and go to state 56
    DIV    shift, and go to state 57

    SEMICOLON  reduce using rule 33 (Expr)
    SEMICOLON  [reduce using rule 39 (Expr)]
    COMMA      reduce using rule 33 (Expr)
    COMMA      [reduce using rule 39 (Expr)]
    PLUS       reduce using rule 33 (Expr)
    PLUS       [reduce using rule 39 (Expr)]
    MULT       reduce using rule 33 (Expr)
    MULT       [reduce using rule 39 (Expr)]
    RPAR       reduce using rule 33 (Expr)
    RPAR       [reduce using rule 39 (Expr)]
    LESSTHN    reduce using rule 33 (Expr)
    LESSTHN    [reduce using rule 39 (Expr)]
    GRTRTHN    reduce using rule 33 (Expr)
    GRTRTHN    [reduce using rule 39 (Expr)]
    LESSTHNEQ  reduce using rule 33 (Expr)
    LESSTHNEQ  [reduce using rule 39 (Expr)]
    GRTRTHNEQ  reduce using rule 33 (Expr)
    GRTRTHNEQ  [reduce using rule 39 (Expr)]
    EQEQ       reduce using rule 33 (Expr)
    EQEQ       [reduce using rule 39 (Expr)]
    NOTEQ      reduce using rule 33 (Expr)
    NOTEQ      [reduce using rule 39 (Expr)]
    $default   reduce using rule 33 (Expr)


State 72

   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr
   42     | Primary MINUS Expr •

    MULT  shift, and go to state 54

    $default  reduce using rule 42 (Expr)


State 73

   33 Expr: Primary •
   38     | Primary • PLUS Expr
   39     | Primary • PLUS Primary
   40     | Primary • DIV Expr
   41     | Primary • DIV Primary
   42     | Primary • MINUS Expr
   43     | Primary • MINUS Primary
   43     | Primary MINUS Primary •

    MINUS  shift, and go to state 56
    DIV    shift, and go to state 57

    SEMICOLON  reduce using rule 33 (Expr)
    SEMICOLON  [reduce using rule 43 (Expr)]
    COMMA      reduce using rule 33 (Expr)
    COMMA      [reduce using rule 43 (Expr)]
    PLUS       reduce using rule 33 (Expr)
    PLUS       [reduce using rule 43 (Expr)]
    MULT       reduce using rule 33 (Expr)
    MULT       [reduce using rule 43 (Expr)]
    RPAR       reduce using rule 33 (Expr)
    RPAR       [reduce using rule 43 (Expr)]
    LESSTHN    reduce using rule 33 (Expr)
    LESSTHN    [reduce using rule 43 (Expr)]
    GRTRTHN    reduce using rule 33 (Expr)
    GRTRTHN    [reduce using rule 43 (Expr)]
    LESSTHNEQ  reduce using rule 33 (Expr)
    LESSTHNEQ  [reduce using rule 43 (Expr)]
    GRTRTHNEQ  reduce using rule 33 (Expr)
    GRTRTHNEQ  [reduce using rule 43 (Expr)]
    EQEQ       reduce using rule 33 (Expr)
    EQEQ       [reduce using rule 43 (Expr)]
    NOTEQ      reduce using rule 33 (Expr)
    NOTEQ      [reduce using rule 43 (Expr)]
    $default   reduce using rule 33 (Expr)


State 74

   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr
   40     | Primary DIV Expr •

    $default  reduce using rule 40 (Expr)


State 75

   33 Expr: Primary •
   38     | Primary • PLUS Expr
   39     | Primary • PLUS Primary
   40     | Primary • DIV Expr
   41     | Primary • DIV Primary
   41     | Primary DIV Primary •
   42     | Primary • MINUS Expr
   43     | Primary • MINUS Primary

    MINUS  shift, and go to state 56
    DIV    shift, and go to state 57

    SEMICOLON  reduce using rule 33 (Expr)
    SEMICOLON  [reduce using rule 41 (Expr)]
    COMMA      reduce using rule 33 (Expr)
    COMMA      [reduce using rule 41 (Expr)]
    PLUS       reduce using rule 33 (Expr)
    PLUS       [reduce using rule 41 (Expr)]
    MULT       reduce using rule 33 (Expr)
    MULT       [reduce using rule 41 (Expr)]
    RPAR       reduce using rule 33 (Expr)
    RPAR       [reduce using rule 41 (Expr)]
    LESSTHN    reduce using rule 33 (Expr)
    LESSTHN    [reduce using rule 41 (Expr)]
    GRTRTHN    reduce using rule 33 (Expr)
    GRTRTHN    [reduce using rule 41 (Expr)]
    LESSTHNEQ  reduce using rule 33 (Expr)
    LESSTHNEQ  [reduce using rule 41 (Expr)]
    GRTRTHNEQ  reduce using rule 33 (Expr)
    GRTRTHNEQ  [reduce using rule 41 (Expr)]
    EQEQ       reduce using rule 33 (Expr)
    EQEQ       [reduce using rule 41 (Expr)]
    NOTEQ      reduce using rule 33 (Expr)
    NOTEQ      [reduce using rule 41 (Expr)]
    $default   reduce using rule 33 (Expr)


State 76

   32 Stmt: IF LPAR Condition RPAR • IfBlock

    LCBRA  shift, and go to state 18

    Block    go to state 86
    IfBlock  go to state 87


State 77

   10 Condition: Expr LESSTHN • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 88
    Primary  go to state 42


State 78

   11 Condition: Expr GRTRTHN • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 89
    Primary  go to state 42


State 79

   12 Condition: Expr LESSTHNEQ • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 90
    Primary  go to state 42


State 80

   13 Condition: Expr GRTRTHNEQ • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 91
    Primary  go to state 42


State 81

   14 Condition: Expr EQEQ • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 92
    Primary  go to state 42


State 82

   15 Condition: Expr NOTEQ • Expr

    ID      shift, and go to state 40
    NUMBER  shift, and go to state 26

    Expr     go to state 93
    Primary  go to state 42


State 83

   22 VarDecl: Type ID LBRA NUMBER • RBRA SEMICOLON

    RBRA  shift, and go to state 94


State 84

   28 Stmt: Primary EQ Expr SEMICOLON •

    $default  reduce using rule 28 (Stmt)


State 85

   52 ExprList: Expr COMMA ExprList •

    $default  reduce using rule 52 (ExprList)


State 86

   44 IfBlock: Block •
   45        | Block • ELSE Block

    ELSE  shift, and go to state 95

    $default  reduce using rule 44 (IfBlock)


State 87

   32 Stmt: IF LPAR Condition RPAR IfBlock •

    $default  reduce using rule 32 (Stmt)


State 88

   10 Condition: Expr LESSTHN Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 10 (Condition)


State 89

   11 Condition: Expr GRTRTHN Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 11 (Condition)


State 90

   12 Condition: Expr LESSTHNEQ Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 12 (Condition)


State 91

   13 Condition: Expr GRTRTHNEQ Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 13 (Condition)


State 92

   14 Condition: Expr EQEQ Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 14 (Condition)


State 93

   15 Condition: Expr NOTEQ Expr •
   35 Expr: Expr • MULT Expr
   36     | Expr • MULT Primary
   37     | Expr • PLUS Expr

    PLUS  shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 15 (Condition)


State 94

   22 VarDecl: Type ID LBRA NUMBER RBRA • SEMICOLON

    SEMICOLON  shift, and go to state 96


State 95

   45 IfBlock: Block ELSE • Block

    LCBRA  shift, and go to state 18

    Block  go to state 97


State 96

   22 VarDecl: Type ID LBRA NUMBER RBRA SEMICOLON •

    $default  reduce using rule 22 (VarDecl)


State 97

   45 IfBlock: Block ELSE Block •

    $default  reduce using rule 45 (IfBlock)
